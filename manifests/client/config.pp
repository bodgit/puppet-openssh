# @!visibility private
class openssh::client::config {

  ensure_resource('file', $::openssh::client::conf_dir, {
    ensure => directory,
    owner  => 0,
    group  => 0,
    mode   => '0644',
  })

  ::openssh::client::configuration { $::openssh::client::conf_file:
    owner                                => 0,
    group                                => 0,
    mode                                 => '0644',
    add_keys_to_agent                    => $::openssh::client::add_keys_to_agent,
    address_family                       => $::openssh::client::address_family,
    batch_mode                           => $::openssh::client::batch_mode,
    bind_address                         => $::openssh::client::bind_address,
    canonical_domains                    => $::openssh::client::canonical_domains,
    canonicalize_fallback_local          => $::openssh::client::canonicalize_fallback_local,
    canonicalize_hostname                => $::openssh::client::canonicalize_hostname,
    canonicalize_max_dots                => $::openssh::client::canonicalize_max_dots,
    canonicalize_permitted_cnames        => $::openssh::client::canonicalize_permitted_cnames,
    certificate_file                     => $::openssh::client::certificate_file,
    challenge_response_authentication    => $::openssh::client::challenge_response_authentication,
    check_host_ip                        => $::openssh::client::check_host_ip,
    cipher                               => $::openssh::client::cipher,
    ciphers                              => $::openssh::client::ciphers,
    clear_all_forwardings                => $::openssh::client::clear_all_forwardings,
    compression                          => $::openssh::client::compression,
    compression_level                    => $::openssh::client::compression_level,
    connection_attempts                  => $::openssh::client::connection_attempts,
    connect_timeout                      => $::openssh::client::connect_timeout,
    control_master                       => $::openssh::client::control_master,
    control_path                         => $::openssh::client::control_path,
    control_persist                      => $::openssh::client::control_persist,
    dynamic_forward                      => $::openssh::client::dynamic_forward,
    enable_ssh_keysign                   => $::openssh::client::enable_ssh_keysign,
    escape_char                          => $::openssh::client::escape_char,
    exit_on_forward_failure              => $::openssh::client::exit_on_forward_failure,
    fingerprint_hash                     => $::openssh::client::fingerprint_hash,
    forward_agent                        => $::openssh::client::forward_agent,
    forward_x11                          => $::openssh::client::forward_x11,
    forward_x11_timeout                  => $::openssh::client::forward_x11_timeout,
    forward_x11_trusted                  => $::openssh::client::forward_x11_trusted,
    gateway_ports                        => $::openssh::client::gateway_ports,
    global_known_hosts_file              => $::openssh::client::global_known_hosts_file,
    gssapi_authentication                => $::openssh::client::gssapi_authentication,
    gssapi_client_identity               => $::openssh::client::gssapi_client_identity,
    gssapi_delegate_credentials          => $::openssh::client::gssapi_delegate_credentials,
    gssapi_key_exchange                  => $::openssh::client::gssapi_key_exchange,
    gssapi_renewal_forces_rekey          => $::openssh::client::gssapi_renewal_forces_rekey,
    gssapi_server_identity               => $::openssh::client::gssapi_server_identity,
    gssapi_trust_dns                     => $::openssh::client::gssapi_trust_dns,
    gssapi_kex_algorithms                => $::openssh::client::gssapi_kex_algorithms,
    hash_known_hosts                     => $::openssh::client::hash_known_hosts,
    hostbased_authentication             => $::openssh::client::hostbased_authentication,
    hostbased_key_types                  => $::openssh::client::hostbased_key_types,
    host_key_algorithms                  => $::openssh::client::host_key_algorithms,
    host_key_alias                       => $::openssh::client::host_key_alias,
    host_name                            => $::openssh::client::host_name,
    identities_only                      => $::openssh::client::identities_only,
    identity_agent                       => $::openssh::client::identity_agent,
    identity_file                        => $::openssh::client::identity_file,
    ignore_unknown                       => $::openssh::client::ignore_unknown,
    ip_qos                               => $::openssh::client::ip_qos,
    kbd_interactive_authentication       => $::openssh::client::kbd_interactive_authentication,
    kbd_interactive_devices              => $::openssh::client::kbd_interactive_devices,
    kex_algorithms                       => $::openssh::client::kex_algorithms,
    local_command                        => $::openssh::client::local_command,
    local_forward                        => $::openssh::client::local_forward,
    log_level                            => $::openssh::client::log_level,
    macs                                 => $::openssh::client::macs,
    no_host_authentication_for_localhost => $::openssh::client::no_host_authentication_for_localhost,
    number_of_password_prompts           => $::openssh::client::number_of_password_prompts,
    password_authentication              => $::openssh::client::password_authentication,
    permit_local_command                 => $::openssh::client::permit_local_command,
    pkcs11_provider                      => $::openssh::client::pkcs11_provider,
    port                                 => $::openssh::client::port,
    preferred_authentications            => $::openssh::client::preferred_authentications,
    protocol                             => $::openssh::client::protocol,
    proxy_command                        => $::openssh::client::proxy_command,
    proxy_jump                           => $::openssh::client::proxy_jump,
    proxy_use_fdpass                     => $::openssh::client::proxy_use_fdpass,
    pubkey_accepted_key_types            => $::openssh::client::pubkey_accepted_key_types,
    pubkey_authentication                => $::openssh::client::pubkey_authentication,
    rekey_limit                          => $::openssh::client::rekey_limit,
    remote_forward                       => $::openssh::client::remote_forward,
    request_tty                          => $::openssh::client::request_tty,
    revoked_host_keys                    => $::openssh::client::revoked_host_keys,
    rhosts_rsa_authentication            => $::openssh::client::rhosts_rsa_authentication,
    rsa_authentication                   => $::openssh::client::rsa_authentication,
    send_env                             => $::openssh::client::send_env,
    server_alive_count_max               => $::openssh::client::server_alive_count_max,
    server_alive_interval                => $::openssh::client::server_alive_interval,
    stream_local_bind_mask               => $::openssh::client::stream_local_bind_mask,
    stream_local_bind_unlink             => $::openssh::client::stream_local_bind_unlink,
    strict_host_key_checking             => $::openssh::client::strict_host_key_checking,
    tcp_keep_alive                       => $::openssh::client::tcp_keep_alive,
    tunnel                               => $::openssh::client::tunnel,
    tunnel_device                        => $::openssh::client::tunnel_device,
    update_host_keys                     => $::openssh::client::update_host_keys,
    use_privileged_port                  => $::openssh::client::use_privileged_port,
    user                                 => $::openssh::client::user,
    user_known_hosts_file                => $::openssh::client::user_known_hosts_file,
    verify_host_key_dns                  => $::openssh::client::verify_host_key_dns,
    visual_host_key                      => $::openssh::client::visual_host_key,
    xauth_location                       => $::openssh::client::xauth_location,
  }

  $::openssh::client::hosts.each |$resource, $attributes| {
    ::openssh::client::host { $resource:
      *      => $attributes,
      target => $::openssh::client::conf_file,
    }
  }

  $::openssh::client::matches.each |$resource, $attributes| {
    ::openssh::client::match { $resource:
      *      => $attributes,
      target => $::openssh::client::conf_file,
    }
  }
}
